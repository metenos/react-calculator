{"version":3,"sources":["components/Display/Display.js","components/Calculator/Calculator.js","App.js","serviceWorker.js","index.js"],"names":["Display","this","props","calculation","className","value","operator","value2","React","Component","Calculator","state","handleClick","bind","handleClear","handleOperator","handleCalculate","handleKey","reverseValue","event","buttonValue","setState","key","target","prevState","button","console","log","parseFloat","string","toString","check","preventDefault","document","addEventListener","onClick","id","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e85834bb.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Display.css'\r\n\r\nclass Display extends React.Component {\r\n    render() {\r\n        if(this.props.calculation) {\r\n            return (\r\n                <div className='displayBox'>\r\n                    <h1>{this.props.calculation}</h1>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div className='displayBox'>\r\n                    <h1>{this.props.value} {this.props.operator} {this.props.value2}</h1>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Display","import React from 'react'\r\nimport Display from './../Display/Display'\r\nimport './Calculator.css'\r\n\r\nclass Calculator extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            value: \"\",\r\n            value2: \"\",\r\n            operator: \"\",\r\n            calculation: \"\"\r\n        }\r\n        this.handleClick = this.handleClick.bind(this)\r\n        this.handleClear = this.handleClear.bind(this)\r\n        this.handleOperator = this.handleOperator.bind(this)\r\n        this.handleCalculate = this.handleCalculate.bind(this)\r\n        this.handleKey = this.handleKey.bind(this)\r\n        this.reverseValue = this.reverseValue.bind(this)\r\n    }\r\n\r\n    handleClick(event) {\r\n        this.setState({calculation: \"\"})\r\n        let buttonValue\r\n        event.key ? buttonValue = event.key : buttonValue = event.target.value\r\n        this.setState((prevState) => {\r\n            if (prevState.operator === \"\") {\r\n                const oldValue = prevState.value\r\n                const newValue = oldValue+buttonValue\r\n                return {value: newValue}\r\n            }\r\n            else {\r\n                const oldValue2 = prevState.value2\r\n                const newValue2 = oldValue2+buttonValue\r\n                return {value2: newValue2}\r\n            }\r\n        })\r\n    }\r\n\r\n    handleClear() {\r\n        this.setState({\r\n            value: \"\",\r\n            value2: \"\",\r\n            operator: \"\",\r\n            calculation: \"\"\r\n        })\r\n    }\r\n\r\n    handleOperator(event) {\r\n        console.log(event.key)\r\n        let button\r\n        event.key ? button = event.key : button = event.target.value\r\n        if (this.state.value === \"\") {\r\n            this.setState({\r\n                value: '0',\r\n                operator: button\r\n            })\r\n        }\r\n        else {\r\n            this.setState({operator: button})\r\n        }\r\n        if (this.state.calculation) {\r\n            this.setState({\r\n                value: this.state.calculation,\r\n                calculation: \"\"\r\n            })\r\n        }\r\n    }\r\n\r\n    handleCalculate() {\r\n        let {value, value2, operator} = {...this.state}\r\n        value = parseFloat(value, 10)\r\n        value2 = parseFloat(value2, 10)\r\n        let calculation\r\n        if(value2) {\r\n            switch(operator) {\r\n                case \"+\": \r\n                    calculation = value + value2\r\n                break;\r\n                case \"-\":\r\n                    calculation = value - value2\r\n                break;\r\n                case \"*\":\r\n                    calculation = value * value2\r\n                break;\r\n                case \"/\":\r\n                    calculation = value / value2\r\n                break;\r\n                default:\r\n                    calculation = 0\r\n            }\r\n            let string = calculation.toString()\r\n            this.setState({\r\n                value: \"\",\r\n                value2: \"\",\r\n                operator: \"\",\r\n                calculation: string})\r\n        }\r\n        else if(value2 === 0) {\r\n            switch(operator) {\r\n                case \"+\": \r\n                    calculation = value + value2\r\n                break;\r\n                case \"-\":\r\n                    calculation = value - value2\r\n                break;\r\n                case \"*\":\r\n                    calculation = value * value2\r\n                break;\r\n                case \"/\":\r\n                    calculation = value / value2\r\n                break;\r\n                default:\r\n                    calculation = 0\r\n            }\r\n            let string = calculation.toString()\r\n            this.setState({\r\n                value: \"\",\r\n                value2: \"\",\r\n                operator: \"\",\r\n                calculation: string})\r\n        }\r\n        else {\r\n            \r\n        }\r\n    }\r\n\r\n    handleKey(event) {\r\n        console.log(event)\r\n        const check = parseFloat(event.key)\r\n        if (check || check === 0 || event.key === \".\") {\r\n            this.handleClick(event)\r\n        }\r\n        else if (event.key === \"Enter\") {\r\n            event.preventDefault()\r\n            this.handleCalculate()\r\n        }\r\n        else if (event.key === \"Escape\") {\r\n            this.handleClear()\r\n        }\r\n        else if (event.key === \"+\" || event.key === \"-\" || event.key === \"*\" || event.key === \"/\") {\r\n            this.handleOperator(event)\r\n        }\r\n        else {\r\n        }\r\n    }\r\n\r\n    reverseValue() {\r\n        if (this.state.value === \"\") {\r\n            this.setState({value: \"-\"})\r\n        }\r\n        else if (this.state.value === \"-\") {\r\n            this.setState({value: \"\"})\r\n        }        \r\n        else if (this.state.value && !this.state.operator) {\r\n            this.setState(prevState => ({value: prevState.value * -1}))\r\n        }\r\n        else if (this.state.operator && this.state.value2 === \"\") {\r\n            this.setState({value2: \"-\"})\r\n        }\r\n        else if (this.state.value2 === \"-\") {\r\n            this.setState({value2: \"\"})\r\n        }\r\n        else if (this.state.value2) {\r\n            this.setState(prevState => ({value2: prevState.value2 * -1}))\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        document.addEventListener(\"keydown\", this.handleKey)\r\n\r\n        return (\r\n            <div>\r\n                <Display {...this.state} />\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td><button value='1' onClick={this.handleClick}>1</button></td>\r\n                            <td><button value='2' onClick={this.handleClick}>2</button></td>\r\n                            <td><button value='3' onClick={this.handleClick}>3</button></td>\r\n                            <td><button value='+' onClick={this.handleOperator}>+</button></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><button value='4' onClick={this.handleClick}>4</button></td>\r\n                            <td><button value='5' onClick={this.handleClick}>5</button></td>\r\n                            <td><button value='6' onClick={this.handleClick}>6</button></td>\r\n                            <td><button value='-' onClick={this.handleOperator}>-</button></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><button value='7' onClick={this.handleClick}>7</button></td>\r\n                            <td><button value='8' onClick={this.handleClick}>8</button></td>\r\n                            <td><button value='9' onClick={this.handleClick}>9</button></td>\r\n                            <td><button value='*' onClick={this.handleOperator}>x</button></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><button onClick={this.reverseValue}>±</button></td>\r\n                            <td><button value='0' onClick={this.handleClick}>0</button></td>\r\n                            <td><button value='.' onClick={this.handleClick}>.</button></td>\r\n                            <td><button value='/' onClick={this.handleOperator}>÷</button></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><button onClick={this.handleCalculate}>=</button></td>\r\n                            <td><button id=\"clear\" onClick={this.handleClear}>Clear</button></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Calculator","import React from 'react';\nimport './App.css';\nimport Calculator from './components/Calculator/Calculator'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Simple Calculator</h1>\n        <Calculator />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}